SQL ‚Äì Part II

Hern√°n Rondelli
lucifer.unix.cabj@gmail.com

Universidad de Ciencias Empresariales y Sociales

* rondelli.github.io/db2/sql-2.html

.image img/rondelli.github.io-db2-sql-2.html.png 500 _

* order by

* order by

	select *
	from   empleade
	order  by salario;
 
	select *
	from   empleade
	order  by salario asc;
 
	select *
	from   empleade
	order  by salario desc;
 
	select *
	from   empleade
	order  by apellido, nombre;

* Subqueries

* subquery

 select nombre, salario
 from empleade
 where salario >= (
     select salario
     from empleade
     where legajo = 626
 );

* exists

 select e1.nombre, e1.apellido
 from empleade e1
 where not exists (
     select *
     from empleade e2
     where departamento = 'sistemas' and e2.salario >= e1.salario
 );

* all

 select nombre, apellido
 from empleade
 where salario > all (
     select salario
     from empleade
     where departamento = 'sistemas'
 );

* in

 select nombre, apellido, departamento
 from  empleade
 where departamento in (
     select departamento
     from proyecto
     where fecha_inicio >= '2011-06-26'
 );

* Funciones de agregaci√≥n

* Funciones de agregaci√≥n‚Ä¶

`count()`

	select count(*) 
	from   empleade;
 
	select count(nombre) 
	from   empleade;
 
	select count(distinct nombre) 
	from   empleade;

* Funciones de agregaci√≥n

	select sum(salario) from empleade;
 
	select max(salario) from empleade;
 
	select min(salario) from empleade;
 
	select avg(salario) from empleade;
 
	select max(salario), min(salario), avg(salario) from empleade;

* group by

* group by

	select   departamento, count(*), avg(salario)
	from     empleade
	group by departamento;
 
	select   departamento, count(*), salario
	from     empleade
	group by departamento, salario;
 
	select   departamento, count(*), avg(salario)
	from     empleade
	where    departamento = 'sistemas' or departamento = 'finanzas'
	group by departamento;

* having

	select   departamento, avg(salario) 
	from     empleade 
	group by departamento 
	having   count(*) > 10;

# *having* s√≥lo puede hacer referencia a funciones de agregaci√≥n √≥ a campos que est√©n en el *group*by*.

* having √≥ where ü§î

	select   departamento, count(*) 
	from     empleade 
	where    salario >= 40000
	group by departamento 
	having   count(*) > 10;
 
	select   departamento, count(*) 
	from     empleade 
	where    salario >= 40000 and departamento in (select   departamento
	                                               from     empleade
	                                               group by departamento
	                                               having   count(*) > 10)
	group by departamento;  

* Operaciones de conjuntos

* union

	select a from r
	union
	select a from s;
 
	select a from r
	union all
	select a from s;

* intersect

	(select a from r)
	intersect
	(select a from s);
 
	(select a from r)
	intersect all
	(select a from s);

* except

	(select a from r)
	except
	(select a from s);
 
	(select a from r)
	except all
	(select a from s);

* One more thing‚Ä¶

* divisi√≥n

Empleades que trabajan en todos los proyectos.
 
 select distinct legajo
 from trabaja_en t1
 where not exists (
     select 1
     from proyecto p
     where not exists (
         select 1
         from trabaja_en t2
         where t2.legajo = t1.legajo and t2.proyecto_id = p.proyecto_id
     )
 );

# empty title
* 

.image img/questions.png
